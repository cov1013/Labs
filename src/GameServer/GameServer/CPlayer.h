#pragma once
#include "Protocol.h"
#include "../netlib/MMOServer/CNetSession.h"

namespace cov1013
{
	class CPlayer : public CNetSession
	{
		friend class CGameServer;

	public:
		CPlayer();
		~CPlayer();

	protected:
		///////////////////////////////////////////////////////////////////
		// AUTH 모드로의 신규 클라이언트 입장.
		// 
		// 해당 플레이어 접속으로 인한 게임상의 데이터 할당 및 준비
		///////////////////////////////////////////////////////////////////
		virtual void OnAuth_ClientJoin(void);

		///////////////////////////////////////////////////////////////////
		// AUTH 모드에서 클라이언트 퇴장
		// 
		// 인증과정에서만 사용했던 데이터가 있다면 정리
		///////////////////////////////////////////////////////////////////
		virtual void OnAuth_ClientLeave(void);

		///////////////////////////////////////////////////////////////////
		// AUTH 모드 세션의 클라이언트 패킷 수신
		// 
		// 로그인 패킷 확인 및 DB 데이터 로딩
		///////////////////////////////////////////////////////////////////
		virtual void OnAuth_Packet(CPacket* pPacket);

		///////////////////////////////////////////////////////////////////
		// GAME 모드로의 신규 클라이언트 입장
		// 
		// 게임컨텐츠 진입을 위한 데이터 준비 및 세팅
		// (월드 맵에 캐릭터 박기, 퀘스트 준비 등)
		///////////////////////////////////////////////////////////////////
		virtual void OnGame_ClientJoin(void);

		///////////////////////////////////////////////////////////////////
		// GAME 모드에서 클라이언트 퇴장
		// 
		// 게임 컨텐츠상의 플레이어 정리
		// (월드맵에서 제거, 파티정리 등)
		///////////////////////////////////////////////////////////////////
		virtual void OnGame_ClientLeave(void);

		///////////////////////////////////////////////////////////////////
		// GAME 모드에서 클라이언트 연결 종료
		// 
		// 해당 클라이언트의 진정한 접속 종료, 정리, 해제 등
		///////////////////////////////////////////////////////////////////
		virtual void OnGame_ClientRelease(void);

		///////////////////////////////////////////////////////////////////
		// GAME 모드 세션의 클라이언트 패킷 수신
		// 
		// 실제 게임 패킷 처리
		///////////////////////////////////////////////////////////////////
		virtual void OnGame_Packet(CPacket* pPacket);

	private:
		void netPacketProc_Login(CPacket* pRecvPacket);
		void netPacketProc_Echo(CPacket* pRecvPacket);
		void netPacketProc_HeartBeat(CPacket* pRecvPacket);

		void mp_ResLogin(CPacket* pSendPacket, BYTE Status, INT64 AccountNo);
		void mp_ResEcho(CPacket* pSendPacket, INT64 AccountNo, LONGLONG SendTick);

	private:
		DWORD m_LastRecvTime;
	};
}