/*-------------------------------------------------------------------
CScreenDib.h
-------------------------------------------------------------------*/
#pragma once

/*-------------------------------------------------------------------
DIB를 사용한 GDI용 스크린 버퍼.
윈도우의 HDC 에 DIB 를 사용하여 그림을 찍어준다.

1. 생성자 : 게임 해상도 및 컬러 설정
2. 생성자 : 사이즈에 맞는 메모리 동적 할당
3. 생성자 : DIB활용을 위한 BITMAPINFOHEADER 설정
4. 외부 : 메모리 버퍼 접근을 위한 Getter 함수 사용
5. 외부 : 그림 출력 (이미지 복사)
6. 메모리 화면을 DC로 출력

게임 로직에서는 4, 5, 6이 매 프레임마다 반복 실행된다.
-------------------------------------------------------------------*/
class CScreenDib
{
public:
	CScreenDib(const int iWidth, const int iHeight, const int iColorBit);
	//----------------------------------------
	// 생성자 - 전체 사이즈와 컬러 비트를 받는다.
	// 
	// 
	//----------------------------------------

	virtual ~CScreenDib();

protected:
	void CreateDibBuffer(const int iWidth, const int iHeight, const int iColorBit);
	//----------------------------------------
	// 메모리 버퍼와 DIB를 생성한다. 생성자에서 호출
	// 
	// 
	//----------------------------------------


	void ReleaseDibBuffer(void);
	//----------------------------------------
	// 생성된 메모리 버퍼를 삭제한다. 파괴자에서 호출
	// 
	// 
	//----------------------------------------

public:
	void Flip(const HWND hWnd, const int iX = 0, const int iY = 0);
	//----------------------------------------
	// 게임쪽에서 버퍼에 그림을 모두 그린 후 화면으로 출력 (FLIP)
	// 
	// 
	//----------------------------------------


	BYTE* GetDibBuffer(void);
	//----------------------------------------
	// 메모리 버퍼 포인터 리턴
	// 
	// 
	//----------------------------------------


	int GetWidth(void);
	//----------------------------------------
	// 메모리 버퍼 Pixel 너비를 리턴
	// 
	// 
	//----------------------------------------


	int GetHeight(void);
	//----------------------------------------
	// 메모리 버퍼 Pixel 높이 리턴
	// 
	// 
	//----------------------------------------


	int GetPitch(void);
	//----------------------------------------
	// 메모리 버퍼 Picth 리턴
	// 
	// 
	//----------------------------------------

private:
	BITMAPINFO	m_stDibInfo;		// DIB 활용을 위한 BITMAPINFOHEADER
	BYTE*		m_bypBuffer;		// 메모리 버퍼의 포인터
	int			m_iWidth;			// 메모리 버퍼의 가로 한 줄 Pixel 너비	
	int			m_iHeight;			// 메모리 버퍼의 세로 한 줄 Pixel 높이
	int			m_iPitch;			// 메모리 버퍼의 가로 한 줄 byte 단위의 길이
	int			m_iColorBit;		// 본 버퍼의 이미지 컬러 Bit
	int			m_iBufferSize;		// 메모리 버퍼의 전체 사이즈
};